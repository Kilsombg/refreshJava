package laboratory.zadacha1;

/* Контролно Java #2

Да се напише програма за фабрика за туршии.

Фабриката се състои от множество поточни линии, всяка от които може да произвежда различна туршия.
 Всеки вид туршия има различни особености при произвеждане.

1.	Клас за кашон Crate:
Представлява кашон с финалната продукция. Това е клас, който съдържа само данни и никаква логика.
Да има атрибути за име на вида туршия и броят буркани. Да има статичен атрибут за максималното
количество буркани в кашоните.

2.	Класове за поточни линии
a.	Основен клас - дефинирайте основен клас или интерфейс за поточна линия.
 Всяка една поточна линия има атрибути за името и капацитет за туршия, която
 може да произвежда, и метод List<Crate> produce(float load), който произвежда кашони,
 пълни с буркани туршия. produce получава като аргумент число в интервала [0, 1],
 което показва какъв процент от капацитета на линията да се използва(0 означава 0%, а 1 означава 100%).
 Произведените буркани се разпределят в минимален брой кашони, като всички без
 последния трябва да са пълни до максималния си капацитет. При недостатъчни буркани
 последният кашон може да не е пълен.
b.	Клас за поточна линия за кисели краставички - произвежда капацитет * load туршии,
 закръглено надолу(полупълни буркани не се приемат!).
Пример:
При капацитет на линията от 100, максимален капацитет на кашоните 10 и load = 1 ще се произведат
 10 кашона с по 10 буркана. При load = 0.35 ще се произведат 4 кашона, като последният съдържа 5 буркана,
 а останалите - по 10.
c.	Клас за поточна линия за дини - произвежда капацитет * load буркана, но на всяко следващо
извикване на produce броят буркани се увеличава с 5%.
Пример:
При капацитет на линията от 20, максимален капацитет на кашоните 10 и load = 0.5 на първото
извикване ще се произведат 10 буркана, на второто извикване - 12 буркана, на третото - 13 буркана и т.н.
d.	Клас за поточна линия за смесени туршии - вместо сама да произвежда получава референции
към други поточни линии и използва произведеното от тях. В produce събира произведените кашони
от другите линии и ги връща, като променя съответно името на продукта в кашоните.
Ако е възможно мести буркани в полупълните кашони за да намали броя кашони.
Пример:
Ако смесената линия използва линия за краставички с капацитет 100 и линия за дини с капацитет 20
и се подаде load = 0.55 то ще се произведат 55 буркана краставички и 11 буркана дини, които могат
да се комбинират в общо 7 кашона вместо оригиналните им 8.

3.	Клас за фабрика:
Съдържа колекция от поточни линии. Могат да се добавят нови поточни линии само след като бъде инстанциран.
 Съдържа метод List<Crate> produce(float load), който връща общ списък с произведението кашони от всички
  поточни линии.

4.	Юнит тестове
Дадени са ви начални тестове за поточна линия за кисели краставички. Довършете тях и добавете
тестове за останалите класове

5.	Общи изисквания:
a.	Подредете кода в пакети
b.	Използвайте правилна енкапсулация. Атрибути, които не трябва или няма смисъл да бъдат достъпни да бъдат скрити.
Атрибути, които трябва само да се четат, да имат гетъри.
c.	Качвайте цялата папка на проекта без папката target
d.	Решенията качвайте като архив с име <номер>_<име>-<фамилия>
*/
