package su.su4;
/*
Вашата задача е да напишете част от backend за система за създаване на спортни събития и приемане на залози.
Възможните спортни събития са футболен турнир, конни надбягвания и състезания от Формула 1. За целта създайте:
- клас FootballCompetition с  поле fastestGoal и статичен масив schedule от тип участници (participant)
- клас HorseCompetition с поле breed и статичен масив schedule от тип участници (participant)
- клас Formula1Competition с поле winnersTime и статичен масив schedule от тип участници (participant)

Трите класа имплементират интерфейс Competition със следния метод Participant [] getSchedule();

Класът Participant има следните полета: id, name, age, chanceToWin, betForWin

Задача 1: Напишете клас CreateEvent с поле typeOfEvent и метод getEvent(), който получава като аргумент -
 стринг competitionType (едно от трите възможни състезания). Създава обект от подадения тип и връща създадения обект.
 При неправилно подаден аргумент (различен от  трите възможни състезания) методът хвърля изключение EventException.
 Напишете това изключение.

Задача 2: В класа CreateEvent напишете метод public void fillSchedule(Competition ob, Participant[] schedule),
 който инициализира списъка а участници и техните коефициенти. Ако списъкът е празен хвърля изключение
  EmptySetException.

Задача 3: Напишете статичен метод static void bets(Competition ob, int id, double bet),
 който преизчислява коефициента (chanceToWin) а дадения състезател/отбор по зададеното id.
 Преизчисляването се извършва като сумата (bet), която даден клиент залага за състезател/отбор
 се сумира към събраната досега с ума (betForWin) и се длеи на предходната сума (betForWin).
 Коефициентът (chanceToWin) се променъ като намалява с процента, получен от предишната операция.
 Коефициентът не може да бъде под 1.1. Ако новата стойност на chanceToWin e по0малка от стойността - 1.1,
 chanceToWin става равно на 1.1 ( т.е. стойността chanceToWin не може да е под 1.1)

Задача 4: Тествайте
*/